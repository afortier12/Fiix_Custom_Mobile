<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="android:textColor">@android:color/black</item>
    </style>

    <style name="PrimaryActionButton" parent="Widget.MaterialComponents.FloatingActionButton">
        <item name="backgroundTint">@color/gold</item>
    </style>

    <style name="BarcodeTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="windowNoTitle">true</item>
        <item name="android:windowActionBar">false</item>
    </style>

    <style name="LoginTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="colorAccent">#3498db</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="TextInputLayout" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="hintTextAppearance">@style/HintText</item>
        <item name="android:paddingBottom">8dp</item>
        <item name="android:textColor">@android:color/black</item>
        <item name="android:strokeColor">@android:color/black</item>
    </style>


    <style name="HintText" parent="TextAppearance.MaterialComponents.Subtitle2">
        <item name="android:textColor">@android:color/black</item>
        <item name="android:textSize">14sp</item>
    </style>

    <style name="DropdownHintText" parent="TextAppearance.MaterialComponents.Subtitle2">
        <item name="android:textColor">@android:color/black</item>
        <item name="android:textSize">14sp</item>
        <item name="android:padding">30dp</item>
        <item name="android:layout_margin">10dp</item>
    </style>

    <style name="Button" parent="Widget.MaterialComponents.Button">
        <item name="android:textColor">?android:attr/textColorPrimary</item>
        <item name="backgroundTint">?attr/colorPrimaryDark</item>
    </style>

    <style name="TextButton" parent="Widget.MaterialComponents.Button.TextButton">
        <item name="android:textColor">@android:color/white</item>

    </style>

    <style name="AppTheme.Chip" parent="TextAppearance.MaterialComponents.Chip">
        <item name="android:textSize">18sp</item>
    </style>

    <style name="radioButtonStyle" parent="Widget.MaterialComponents.CompoundButton.RadioButton">
        <item name="android:textSize">18sp</item>
    </style>


    <style name="buttonIcon" parent="@style/Widget.AppCompat.Button.Borderless">
        <item name="android:adjustViewBounds">true</item>
        <item name="android:scaleType">fitXY</item>
        <item name="android:padding">0dp</item>
    </style>

    <style name="AppTheme.Slide">
        <item name="android:windowEnterAnimation">@animator/slide_up</item>
        <item name="android:windowExitAnimation">@animator/slide_down</item>
    </style>

    <style name="AppTheme.ExposedDropdownMenu"
        parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu">
        <!-- color of box ONLY, not dropdown -->
        <item name="boxBackgroundColor">@color/transparent</item>
        <!-- the box outline color depending on state
             (default, enabled, hovered, focused, but NOT error) -->
        <item name="boxStrokeColor">@color/material_spinner_box</item>
        <!-- the box outline color just for errors -->
        <item name="boxStrokeErrorColor">@color/design_default_color_error</item>
        <!-- enable 8dp space below the box for error message -->
        <item name="errorEnabled">true</item>
        <!-- Gain access to additional styling for the child AutoCompleteTextView,
             which includes this spinner's dropdown/popup menu -->
        <item name="materialThemeOverlay">@style/AppTheme.ExposedDropdownMenu.MaterialThemeOverlay</item>
    </style>

    <!-- customization of the material theme for use as
         an overlay for the ExposedDropdownMenu style  -->
    <style name="AppTheme.ExposedDropdownMenu.MaterialThemeOverlay"
        parent="Theme.MaterialComponents.DayNight.DarkActionBar">
         When this overlay is applied, the AutoCompleteTextView
         loses padding. Luckily, we can restore it by defining
         a style that should be applied to all AutoCompletTextView(s)
         in this theme/overlay
         -->
        <item name="autoCompleteTextViewStyle">@style/AppTheme.ExposedDropdownMenu.AutoCompleteStyle</item>
    </style>

    <!-- style the AutoCompleteTextView of our material spinner -->
    <style name="AppTheme.ExposedDropdownMenu.AutoCompleteStyle">
        <!-- restore padding to sanity -->
        <item name="android:padding">16dp</item>
        <item name="android:textColor">@color/colorOnSurface</item>
        <item name="android:textSize">20sp</item>
    </style>

    <!-- style for material spinner 'item' layout -->
    <style name="MaterialSpinnerItem" parent="Widget.AppCompat.TextView">
        <item name="android:textColor">@color/colorOnSurface</item>
        <item name="android:textSize">20sp</item>
        <item name="android:ellipsize">end</item>
        <item name="android:maxLines">1</item>
        <item name="android:padding">16dp</item>
    </style>





</resources>
